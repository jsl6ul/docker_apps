---
volumes:
  data:

# network between traefik and other docker applications
networks:
  proxy:

services:

  app:
    image: "{{ dapp_traefik_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "traefik"
    networks:
      - proxy
    mem_limit: 512M
    ports: {{ dapp_traefik_ports }}
    environment:
      {{ dapp_traefik_docker_environment|indent(6) }}
    healthcheck:
      {{ dapp_traefik_docker_healthcheck|indent(6) }}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run/user/{{ docker_rootless_user.uid }}/docker.sock:/var/run/docker.sock"
      - "data:/data"
{% if dapp_common_traefik_file_provider is defined %}
      - "./file_provider.yml:/etc/traefik/file_provider.yml"
{% endif %}
{% if dapp_common_traefik_certresolver == "none" %}
      - "./traefik-tls.yml:/etc/traefik/tls.yml"
      - "./traefik-cert.crt:/etc/ssl/traefik/cert.crt"
      - "./traefik-cert.key:/etc/ssl/traefik/cert.key"
{% endif %}
    env_file: traefik.env
    labels:
      traefik.enable: "true"
      traefik.http.routers.dashboard.rule: "Host(`{{ inventory_hostname }}.{{ dapp_common_domain }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      traefik.http.routers.dashboard.entrypoints: "http, https"
      traefik.http.routers.dashboard.service: "api@internal"

{% if dapp_common_traefik_tls %}
      traefik.http.routers.dashboard.tls: "true"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      #traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
{% endif %}

{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.traefik.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.traefik.tls.domains[0].main: "{{ inventory_hostname }}.{{ dapp_common_domain }}"
{% endif %}

{% if dapp_traefik_custom_labels is defined %}
      {{ dapp_traefik_custom_labels|indent(6) }}
{% endif %}
