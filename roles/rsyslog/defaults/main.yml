---
# docker image
dapp_rsyslog_docker_image: localbuild/rsyslog

# rsyslog docker environment variables
dapp_rsyslog_docker_environment: |
  {{ dapp_common_docker_environment }}

# rsyslog docker healthcheck variables
dapp_rsyslog_docker_healthcheck: |
  {{ dapp_common_docker_healthcheck }}

# to map the ports on the host
# dapp_rsyslog_ports:
#   - "514:514/udp"
#   - "514:514/tcp"

# rsyslog actions
# dapp_rsyslog_actions:
#   - name: forward to remote syslog
#     selector: "*.*"
#     parameters:
#       type: omfwd
#       target: 192.168.0.100
#       port: 514
#       protocol: tcp
#       action.resumeRetryCount: -1
#       queue.type: linkedlist
#       queue.filename: .forward_queue_192.168.0.100
#       queue.saveOnShutdown: "on"
#   - name: forward using tls
#     selector: "*.*"
#     parameters:
#       type: omfwd
#       target: 172.16.0.55
#       port: 6514
#       protocol: tcp
#       action.resumeRetryCount: -1
#       queue.type: linkedlist
#       queue.filename: .forward_queue_172.16.0.55
#       queue.saveOnShutdown: "on"
#       StreamDriver: gtls
#       StreamDriverMode: 1
#       StreamDriverAuthMode: anon

# Add a daily cronjob to compress the log files ? (absent|present)
dapp_rsyslog_compress_cron_hour: "04"
dapp_rsyslog_compress_cron_job: /usr/bin/find {{ docker_rootless_user.home }}/{{ dapp_common_directory }}/{{ role_name }}/data -type f -mtime +3 -name '*-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'
  -exec gzip {} \;
dapp_rsyslog_compress_cron_minute: "12"
dapp_rsyslog_compress_cron_state: absent

# Dockerfile to build the container
dapp_rsyslog_dockerfile: |
  FROM debian:stable-slim
  RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    apt-get install -y --no-install-recommends rsyslog rsyslog-gnutls rsyslog-relp && \
    apt-get -y upgrade && \
    apt-get autoremove && \
    rm -rf /var/cache/apt/*
  EXPOSE 514/tcp 514/udp
  ENTRYPOINT ["/entrypoint.sh"]

# container entrypoint.sh
dapp_rsyslog_entrypoint: |
  #!/bin/bash
  echo "config validation"
  /usr/sbin/rsyslogd -N 1 -f /rsyslog.conf
  echo "starting rsyslog"
  /usr/sbin/rsyslogd -n -f /rsyslog.conf

# rsyslog configuration file
dapp_rsyslog_conf: |
  global(
    workDirectory="/data"
    umask="0007"
  )

  # Load UDP module
  module(load="imudp")
  input(type="imudp" port="514" address="*")

  # Load TCP module
  module(load="imtcp")
  input(type="imtcp" port="514")

  # Generate Periodic Statistics of Internal CountersÔÉÅ
  # module(load="impstats" interval="60" severity="7")

  # Set dynafile templates
  template(name="df_syslog" type="string" string="/data/%HOSTNAME%/syslog-%$year-utc%%$month-utc%%$day-utc%")
  template(name="df_auth" type="string" string="/data/%HOSTNAME%/auth-%$year-utc%%$month-utc%%$day-utc%")
  template(name="df_cron" type="string" string="/data/%HOSTNAME%/cron-%$year-utc%%$month-utc%%$day-utc%")
  template(name="df_kern" type="string" string="/data/%HOSTNAME%/kern-%$year-utc%%$month-utc%%$day-utc%")
  template(name="df_mail" type="string" string="/data/%HOSTNAME%/mail-%$year-utc%%$month-utc%%$day-utc%")
  template(name="df_user" type="string" string="/data/%HOSTNAME%/user-%$year-utc%%$month-utc%%$day-utc%")

  # Log anything besides private authentication messages to a single log file
  *.*;auth,authpriv.none action(type="omfile" dynafile="df_syslog" template="RSYSLOG_FileFormat")

  # Log commonly used facilities to their own log file
  auth,authpriv.* action(type="omfile" dynafile="df_auth" template="RSYSLOG_FileFormat")
  cron.* action(type="omfile" dynafile="df_cron" template="RSYSLOG_FileFormat")
  kern.* action(type="omfile" dynafile="df_kern" template="RSYSLOG_FileFormat")
  mail.* action(type="omfile" dynafile="df_mail" template="RSYSLOG_FileFormat")
  user.* action(type="omfile" dynafile="df_user" template="RSYSLOG_FileFormat")

  {% if dapp_rsyslog_actions is defined %}
  {% for action in dapp_rsyslog_actions %}
  {{ action.selector }} action(
        name="{{ action.name|replace(' ','_') }}"
  {% for key in action.parameters %}
        {{ key }}="{{ action.parameters[key] }}"
  {% endfor %}
      )

  {% endfor %}
  {% endif %}

# Extra files to copy to "{{ _docker_project_dir }}/"
# Bind mount them in container, if container_path is defined.
# dapp_rsyslog_extra_files:
#   - name: cert.pem
#     mode: "0644"
#     container_path: /cert.pem
#     content: |
#       -----BEGIN CERTIFICATE-----
#       MIIDazCCAlOgAwIBAgIUWMnzpypiuQZCl4w7wKPP3XscSN0wDQYJKoZIhvcNAQEL
#       BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
#       MTAxNjA1MDFaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw
#       DQi0Y9lgF8+gSQJNPjAHTKLn4MZUE+52Iq8XE9mqN9cnuTKivAtZlhjbdo7xPeGo
#       AQUAA4IBDwAwggEKAoIBAQDjrKL+Wku/cxqj/yX8H1N9z6PS9RF0T2QhIzwkl0Gx
#       mim3Dz60DFojc6dBBzey2reA3fQcNL/eqaeJUXUy2u9bNOO3tk9uPuiLTKHvsVhH
#       1j2h8Ubiy4FNmKEteOclrXbM5k47A4YfY6O1kfQ817SjeCnPa51sH9nsJaEPUjGA
#       1pVoMRkW3bV7/RMnRyqnD/3m27fnaAyObnQJtS+dO5lde349SifCy8yCK+hYZrsj
#       d75zQ+1UPlYF3dHsRxxP8VIm3lqYkpRJMBTMCBfL4HMHyVZXISHbul7Y12uaQtBo
#       jg2/EZmj2EQ4Qy/ggYzImPKV0I//b8NH9gmduL6LMueXAgMBAAGjUzBRMB0GA1Ud
#       DgQWBBTpbLG0sO6QH5JwQbelqvAaylSOSTAfBgNVHSMEGDAWgBTpbLG0sO6QH5Jw
#       QbelqvAaylSOSTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQAI
#       C6QToTEdDQ5WmkhneuOiNqzqLoZFQaDW0UKQg3Qa4lSydbSD7y4xgYGpTJcEwT0+
#       HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggEiMA0GCSqGSIb3DQEB
#       +v0y/V/BXHOZQaHfsnB6R/kHK5T8i9zh9mzivdOk/DL9LcMsa8MRfVIVy7iS7eiD
#       GErN6RsGQfXj6CNcmSJxEKjrpEYRWK8E3ndndTo7vAG8o8nJgNXO874Yat/EOQYB
#       xh1NJJ0bS6pedftupJDYmOhoDlywq5svV9c+xBTDLhaq6fKGfr1zcBauw/5LVwmt
#       GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNTA1MTIxNjA1MDFaFw0yNTA4
#       fqFHMOk+2pxVCESS4xKs
#       -----END CERTIFICATE-----
