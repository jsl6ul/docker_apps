---
volumes:
  alertmanager:
  grafana_data:
  prometheus:

networks:
  default:
  traefik_proxy:
    external: true

services:

  prometheus:
    image: "{{ dapp_monitoring_prometheus_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "prometheus"
    networks:
      - default
      - traefik_proxy
{% if dapp_monitoring_prometheus_docker_mem_limit is defined %}
    mem_limit: {{ dapp_monitoring_prometheus_docker_mem_limit }}
{% endif %}
    volumes:
      {{ dapp_monitoring_prometheus_volumes|to_nice_yaml|indent(6) }}
    environment:
      {{ dapp_monitoring_prometheus_docker_environment|indent(6) }}
    healthcheck:
      {{ dapp_monitoring_prometheus_docker_healthcheck|indent(6) }}
    links:
      - alertmanager
      - blackbox
    command:
      {{ dapp_monitoring_prometheus_docker_command | to_nice_yaml | indent(6) }}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_proxy"
      traefik.http.routers.prometheus.entrypoints: "http, https"
      traefik.http.routers.prometheus.rule: "Host(`{{ dapp_monitoring_prometheus_traefik_address }}`)"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
{% if dapp_monitoring_prometheus_basicauth is defined %}
      # password hash: escape $ with a second $
      traefik.http.middlewares.prometheusauth.basicauth.users: "{{ dapp_monitoring_prometheus_basicauth | regex_replace('\$','$$') }}"
      traefik.http.routers.prometheus.middlewares: "prometheusauth"
{% endif %}
{% if dapp_common_traefik_tls %}
      traefik.http.routers.prometheus.tls: "true"
{% endif %}
{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.prometheus.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.prometheus.tls.domains[0].main: "{{ dapp_monitoring_prometheus_traefik_address }}"
{% endif %}

  alertmanager:
    image: "{{ dapp_monitoring_alertmanager_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "alertmanager"
    networks:
      - default
      - traefik_proxy
{% if dapp_monitoring_alertmanager_docker_mem_limit is defined %}
    mem_limit: {{ dapp_monitoring_alertmanager_docker_mem_limit }}
{% endif %}
    volumes:
      {{ dapp_monitoring_alertmanager_volumes|to_nice_yaml|indent(6) }}
    environment:
      {{ dapp_monitoring_alertmanager_docker_environment|indent(6) }}
    healthcheck:
      {{ dapp_monitoring_alertmanager_docker_healthcheck|indent(6) }}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_proxy"
      traefik.http.routers.alertmanager.entrypoints: "http, https"
      traefik.http.routers.alertmanager.rule: "Host(`{{ dapp_monitoring_alertmanager_traefik_address }}`)"
      traefik.http.services.alertmanager.loadbalancer.server.port: "9093"
{% if dapp_monitoring_alertmanager_basicauth is defined %}
      # password hash: escape $ with a second $
      traefik.http.middlewares.alertmanagerauth.basicauth.users: "{{ dapp_monitoring_alertmanager_basicauth | regex_replace('\$','$$') }}"
      traefik.http.routers.alertmanager.middlewares: "alertmanagerauth"
{% endif %}
{% if dapp_common_traefik_tls %}
      traefik.http.routers.alertmanager.tls: "true"
{% endif %}
{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.alertmanager.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.alertmanager.tls.domains[0].main: "{{ dapp_monitoring_alertmanager_traefik_address }}"
{% endif %}

  blackbox:
    image: "{{ dapp_monitoring_blackbox_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "blackbox"
    networks:
      - default
      - traefik_proxy
{% if dapp_monitoring_blackbox_docker_mem_limit is defined %}
    mem_limit: {{ dapp_monitoring_blackbox_docker_mem_limit }}
{% endif %}
    volumes:
      {{ dapp_monitoring_blackbox_volumes|to_nice_yaml | indent(6) }}
    environment:
      {{ dapp_monitoring_blackbox_docker_environment | indent(6) }}
    healthcheck:
      {{ dapp_monitoring_blackbox_docker_healthcheck | indent(6) }}
    command:
      {{ dapp_monitoring_blackbox_docker_command | to_nice_yaml | indent(6) }}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_proxy"
      traefik.http.routers.blackbox.entrypoints: "http, https"
      traefik.http.routers.blackbox.rule: "Host(`{{ dapp_monitoring_blackbox_traefik_address }}`)"
      traefik.http.services.blackbox.loadbalancer.server.port: "9115"
{% if dapp_common_traefik_tls %}
      traefik.http.routers.blackbox.tls: "true"
{% endif %}
{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.blackbox.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.blackbox.tls.domains[0].main: "{{ dapp_monitoring_blackbox_traefik_address }}"
{% endif %}

  grafana:
    image: "{{ dapp_monitoring_grafana_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "grafana"
    networks:
      - default
      - traefik_proxy
{% if dapp_monitoring_grafana_docker_mem_limit is defined %}
    mem_limit: {{ dapp_monitoring_grafana_docker_mem_limit }}
{% endif %}
    volumes:
      {{ dapp_monitoring_grafana_volumes|to_nice_yaml|indent(6) }}
{% if dapp_monitoring_grafana_ldap_toml is defined %}
      - "./grafana_ldap.toml:/etc/grafana/ldap.toml"
{% endif %}
    environment:
      {{ dapp_monitoring_grafana_docker_environment|indent(6) }}
    healthcheck:
      {{ dapp_monitoring_grafana_docker_healthcheck|indent(6) }}
    links:
      - prometheus
{% if dapp_monitoring_grafana_docker_external_links is defined %}
    external_links:
      {{ dapp_monitoring_grafana_docker_external_links | to_nice_yaml | indent(4) }}
{% endif %}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_proxy"
      traefik.http.routers.grafana.entrypoints: "http, https"
      traefik.http.routers.grafana.rule: "Host(`{{ dapp_monitoring_grafana_traefik_address }}`)"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
{% if dapp_common_traefik_tls %}
      traefik.http.routers.grafana.tls: "true"
{% endif %}
{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.grafana.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.grafana.tls.domains[0].main: "{{ dapp_monitoring_grafana_traefik_address }}"
{% endif %}
    env_file: grafana.env

{% if dapp_monitoring_redfish_config_yml is defined %}
  redfish:
    image: "{{ dapp_monitoring_redfish_docker_image }}"
    restart: unless-stopped
    logging:
      driver: journald
      options:
        tag: "redfish"
    networks:
      - default
      - traefik_proxy
    expose:
      - 9348
{% if dapp_monitoring_redfish_docker_mem_limit is defined %}
    mem_limit: {{ dapp_monitoring_redfish_docker_mem_limit }}
{% endif %}
    volumes:
      {{ dapp_monitoring_redfish_volumes|to_nice_yaml | indent(6) }}
    environment:
      {{ dapp_monitoring_redfish_docker_environment | indent(6) }}
    healthcheck:
      {{ dapp_monitoring_redfish_docker_healthcheck | indent(6) }}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_proxy"
      traefik.http.routers.redfish.entrypoints: "http, https"
      traefik.http.routers.redfish.rule: "Host(`{{ dapp_monitoring_redfish_traefik_address }}`)"
      traefik.http.services.redfish.loadbalancer.server.port: "9348"
{% if dapp_common_traefik_tls %}
      traefik.http.routers.redfish.tls: "true"
{% endif %}
{% if dapp_common_traefik_tls and dapp_common_traefik_certresolver != "none" %}
      traefik.http.routers.redfish.tls.certresolver: "{{ dapp_common_traefik_certresolver }}"
      traefik.http.routers.redfish.tls.domains[0].main: "{{ dapp_monitoring_redfish_traefik_address }}"
{% endif %}
{% endif %}
