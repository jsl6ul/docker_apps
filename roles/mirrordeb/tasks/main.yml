---
- name: Set project directory
  ansible.builtin.set_fact:
    _docker_project_dir: "{{ dapp_common_directory }}/{{ role_name }}"

- name: Create project directory
  ansible.builtin.file:
    path: "{{ _docker_project_dir }}"
    state: directory

- name: Create mirrors directory
  ansible.builtin.file:
    path: "{{ _docker_project_dir }}/mirrors"
    state: directory

- name: Create extras directory
  ansible.builtin.file:
    path: "{{ _docker_project_dir }}/extras"
    state: directory

- name: Create keys directory
  ansible.builtin.file:
    path: "{{ _docker_project_dir }}/keys"
    state: directory

- name: Copy docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml
    dest: "{{ _docker_project_dir }}/docker-compose.yml"
    mode: 0640

- name: Copy Dockerfile
  ansible.builtin.copy:
    dest: "{{ _docker_project_dir }}/Dockerfile"
    content: "{{ dapp_mirrordeb_dockerfile }}"
  notify: Rebuild containers

- name: Copy entrypoint.sh
  ansible.builtin.copy:
    dest: "{{ _docker_project_dir }}/entrypoint.sh"
    content: "{{ dapp_mirrordeb_entrypoint }}"
  notify: Rebuild containers

- name: Copy nginx.conf
  ansible.builtin.copy:
    dest: "{{ _docker_project_dir }}/nginx.conf"
    content: "{{ dapp_mirrordeb_nginx_conf }}"
  notify: Rebuild containers

- name: Copy debmirror.patch
  ansible.builtin.copy:
    dest: "{{ _docker_project_dir }}/debmirror.patch"
    content: "{{ __debmirror_patch }}"
  notify: Rebuild containers

- name: Start containers
  ansible.builtin.shell: |
    docker compose --project-directory "{{ _docker_project_dir }}" up -d
  changed_when: false

- name: Flush handlers
  meta: flush_handlers
