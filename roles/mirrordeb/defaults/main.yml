---
# docker image
dapp_mirrordeb_docker_image: localbuild/mirrordeb

dapp_mirrordeb_docker_mem_limit: 512M

# service address
dapp_mirrordeb_traefik_address: mirror.{{ dapp_common_domain }}

# Define 'dapp_mirrordeb_run_delay' to execute commands
# automatically according to the specified delay.
# dapp_mirrordeb_run_delay: 6h

# You can modify the following 'dapp_mirrordeb_directory_*' variables, but if you do,
# you'll have to create the directories yourself; this role won't do it.

# main directory for debmirror destination
dapp_mirrordeb_directory_mirrors: ./mirrors
# directory for 'extras' packages
dapp_mirrordeb_directory_extras: ./extras
# directory for key files
dapp_mirrordeb_directory_keys: ./keys

# mirror settings (remove '--dry-run' option when all is set)
dapp_mirrordeb_mirrors:
  - name: debian
    host: debian.mirror.rafal.ca
    root: /debian
    dist: bookworm,bookworm-updates
    arch: amd64
    section: main,contrib,non-free,non-free-firmware,main/debian-installer,contrib/debian-installer,non-free/debian-installer,non-free-firmware/debian-installer
    dest: /var/www/html/mirrors/debian/
    method: rsync
    options: --nosource --i18n --passive --verbose --ignore=.*/installer-amd64/.* --dry-run
  - name: debian-security
    host: debian.mirror.rafal.ca
    root: /debian-security
    dist: bookworm-security
    arch: amd64
    section: main,contrib,non-free,non-free-firmware,main/debian-installer
    dest: /var/www/html/mirrors/debian-security/
    method: rsync
    options: --nosource --i18n --passive --verbose --dry-run
  - name: ubuntu
    host: ca.archive.ubuntu.com
    root: /ubuntu
    dist: jammy,jammy-security
    arch: amd64
    section: main,restricted,universe,multiverse
    dest: /var/www/html/mirrors/ubuntu/
    method: rsync
    options: --nosource --i18n --passive --verbose --dry-run

# signing keys
dapp_mirrordeb_signing_keys:
  - https://ftp-master.debian.org/keys/archive-key-11.asc
  - https://ftp-master.debian.org/keys/archive-key-11-security.asc
  - https://ftp-master.debian.org/keys/archive-key-12.asc
  - https://ftp-master.debian.org/keys/archive-key-12-security.asc
  - https://ftp-master.debian.org/keys/release-11.asc
  - https://ftp-master.debian.org/keys/release-12.asc
  - https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x630239cc130e1a7fd81a27b140976eaf437d05b5 # Ubuntu Archive Automatic Signing Key
  - https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xf6ecb3762474eda9d21b7022871920d1991bc93c # Ubuntu Archive Automatic Signing Key(2018)

# installer subdirectories
# Optionally, you can define the installer directories to be downloaded here.
# dapp_mirrordeb_installers:
#   - name: bookworm-amd64
#     host: debian.mirror.rafal.ca
#     src: debian/dists/bookworm/main/installer-amd64
#     dest: /var/www/html/mirrors/latest/debian/dists/bookworm/main/
#     rsync_options: -av --dry-run

# Dockerfile to build the container
dapp_mirrordeb_dockerfile: |
  FROM debian:stable-slim
  RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    apt-get install -y --no-install-recommends debmirror ed gnupg gpgv curl nginx dpkg-dev && \
    apt-get -y upgrade && \
    apt-get autoremove && \
    rm -rf /var/cache/apt/*
  COPY entrypoint.sh /entrypoint.sh

  # bash file to run dpkg-scanpackages on /var/www/html/extras/
  RUN echo "#!/bin/bash\ncd /var/www/html/extras/ && dpkg-scanpackages -m . > Packages && cat Packages | gzip > Packages.gz" > /run_scanpackages_extras.sh

  # bash file to run debmirror
  RUN echo '#!/bin/bash\n\
  {% for amirror in dapp_mirrordeb_mirrors %}
  echo "debmirror {{ amirror.name }} ..."\n\
  debmirror {{ amirror.options }}\\\n\
    --method={{ amirror.method }} --host={{ amirror.host }} --root={{ amirror.root }}\\\n\
    --dist={{ amirror.dist }} --arch={{ amirror.arch }}\\\n\
    --section={{ amirror.section }} {{ amirror.dest }}\n\
  \n\
  {% endfor %}\n'\
  >> /run_debmirror.sh

  # bash file to download signing keys
  RUN echo '#!/bin/bash\n\
  touch /root/.gnupg/trustedkeys.gpg\n\
  chmod 0600 /root/.gnupg/trustedkeys.gpg\n\
  {% for akey in dapp_mirrordeb_signing_keys %}
  curl --silent "{{ akey }}" | gpg --no-default-keyring --keyring trustedkeys.gpg --import -\n\
  {% endfor %}\n'\
  >> /run_download_signing_keys.sh

  # bash file to download the installer directories
  RUN echo '#!/bin/bash\n\
  {% if dapp_mirrordeb_installers is defined %}
  {% for installer in dapp_mirrordeb_installers %}
  echo "rsync download installer for {{ installer.name }} ..."\n\
  rsync {{ installer.rsync_options }} {{ installer.host }}::{{ installer.src}} {{ installer.dest }}\n\
  {% endfor %}\n\
  {% endif %}\n'\
  >> /run_download_installers.sh

  RUN chmod u+x /entrypoint.sh && \
    chmod u+x /run_scanpackages_extras.sh && \
    chmod u+x /run_debmirror.sh && \
    chmod u+x /run_download_signing_keys.sh && \
    chmod u+x /run_download_installers.sh && \
    rm -f /var/www/html/index.nginx-debian.html
  COPY nginx.conf /etc/nginx/sites-enabled/default
  EXPOSE 80
  ENTRYPOINT ["/entrypoint.sh"]

# container entrypoint.sh
dapp_mirrordeb_entrypoint: |
  #!/bin/bash
  {% if dapp_mirrordeb_run_delay is defined %}
  echo "starting nginx"
  nginx
  # Auto update mirror
  while true; do
    /run_download_signing_keys.sh
    /run_scanpackages_extras.sh
    /run_debmirror.sh
    /run_download_installers.sh
    echo "going to sleep ..."
    sleep {{ dapp_mirrordeb_run_delay }}
  done
  {% else %}
  echo "starting nginx"
  nginx -g 'daemon off;'
  {% endif %}

# nging configuration file
dapp_mirrordeb_nginx_conf: |
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html;
    server_name _;
    location / {
      autoindex on;
      try_files $uri $uri/ =404;
    }
    access_log syslog:server=unix:/dev/log;
    error_log syslog:server=unix:/dev/log;
  }
